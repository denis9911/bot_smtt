import sqlite3
import time

from apscheduler.schedulers.background import BackgroundScheduler
from telebot import types
from bs4 import BeautifulSoup
import requests
from datetime import datetime as dt
from loguru import logger
from create_bot import bot, cursor, db, admins, Feedback, yandex_token
import yadisk

send_rss = True


def admin_notification():
    dtnow = dt.now().strftime('%d-%m-%Y, %H:%M:%S')
    bot.send_message(765860654, text='–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω ' + dtnow)
    logger.info('–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω ' + dtnow)


admin_notification()


# @bot.message_handler(commands=['admin'])
def admin_menu(message):
    if message.chat.id in admins:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("/send_message")
        item2 = types.KeyboardButton("/send_rss")
        item3 = types.KeyboardButton("/send_log")
        item4 = types.KeyboardButton("/send_feedback")
        item5 = types.KeyboardButton("/reg_send_message_to_user")
        item6 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∞–¥–º–∏–Ω. –∫–æ–º–∞–Ω–¥—É:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –í—ã - –∏–º –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å üëÄ")


# @bot.message_handler(commands=['send_log'])
def sending_log(message):
    if message.chat.id in admins:
        bot.send_document(message.chat.id, document=open(r'bot.log', 'rb'))


# –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
# @bot.message_handler(commands=['send_message'])
def sending_command(message):
    if message.chat.id in admins:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1)
        bot.send_message(message.chat.id, "–ß—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞?", reply_markup=markup)
        bot.register_next_step_handler(message, sending_message)
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –í—ã - –∏–º –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å üëÄ")


def sending_message(message):
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.send_message(message.chat.id, '–ó–∞–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –µ—â—ë —Ä–∞–∑')
    else:
        bot.send_message(message.chat.id, '–ù–∞—á–∞–ª –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è')
        cursor.execute("SELECT user_id FROM users")
        for users in cursor.fetchall():
            try:
                bot.copy_message(message_id=message.id, from_chat_id=message.chat.id, *users)
                time.sleep(0.25)
            except:
                logger.info(f'–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {users[0]}')
                time.sleep(0.25)
        bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º')
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º {message.text}')


# @bot.message_handler(commands=['send_message_to_user'])
def reg_send_message_to_user(message):
    if message.chat.id in admins:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1)
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", reply_markup=markup)
        bot.set_state(message.from_user.id, Feedback.send_message_to_user, message.chat.id)
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –í—ã - –∏–º –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å üëÄ")


@bot.message_handler(state=Feedback.send_message_to_user)
def send_message_to_user(message):
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.delete_state(message.from_user.id, message.chat.id)
        bot.send_message(message.chat.id, '–ó–∞–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –µ—â—ë —Ä–∞–∑')
    else:
        bot.send_message(message.chat.id, text='–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å')
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['sending_user_id'] = message.text
        bot.set_state(message.from_user.id, Feedback.sending_message_to_user, message.chat.id)


@bot.message_handler(state=Feedback.sending_message_to_user, content_types=types.util.content_type_media)
def sending_message_to_user(message):
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        bot.copy_message(message_id=message.id, from_chat_id=message.chat.id, chat_id=data['sending_user_id'])
    markup = types.ReplyKeyboardMarkup()
    markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    for admin in admins:
        bot.send_message(admin, text=f'–°–æ–æ–±—â–µ–Ω–∏–µ "{message.text}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', reply_markup=markup)
    bot.delete_state(message.from_user.id, message.chat.id)


# @bot.message_handler(commands=['send_feedback'])
def send_feedback(message):
    if message.chat.id in admins:
        cursor.execute('SELECT user_id, user_name, message, date, link FROM feedback')
        feedback_message = cursor.fetchall()
        for user_id, user_name, user_message, date, link in feedback_message:
            bot.send_message(message.chat.id, link, parse_mode='html')
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –í—ã - –∏–º –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å üëÄ")


# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞
# @bot.message_handler(commands=['send_rss'])
def rss_command(message):
    if message.chat.id in admins:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–í–∫–ª—é—á–∏—Ç—å")
        item2 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å")
        item3 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
        markup.add(item1), markup.add(item2), markup.add(item3)
        bot.send_message(message.chat.id,
                         f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {send_rss} \n\n–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?",
                         reply_markup=markup)
        bot.register_next_step_handler(message, rss_switch)
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –í—ã - –∏–º –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å üëÄ")


# –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç—É–º–±–ª–µ—Ä –Ω–∞ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
def rss_switch(message):
    global send_rss
    if message.text == "–í–∫–ª—é—á–∏—Ç—å":
        if send_rss:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(item1)
            bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ä–∞–Ω–µ–µ", reply_markup=markup)
        else:
            send_rss = True
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(item1)
            bot.send_message(message.chat.id, text='–†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞', reply_markup=markup)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –≤–∫–ª—é—á–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞')
    elif message.text == "–í—ã–∫–ª—é—á–∏—Ç—å":
        if send_rss:
            send_rss = False
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(item1)
            bot.send_message(message.chat.id, text='–†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞', reply_markup=markup)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –≤—ã–∫–ª—é—á–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞')
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(item1)
            bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –±—ã–ª–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞ —Ä–∞–Ω–µ–µ", reply_markup=markup)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1)
        bot.send_message(message.chat.id, "–ó–∞–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=markup)


def rss_sending():
    if send_rss:
        url = requests.get("http://satehm.ru/news/rss")
        site_content = BeautifulSoup(url.content, 'xml')
        site_items = site_content.find_all('item')
        for item in site_items[:5]:
            site_date = item.pubDate.text[:-5]
            news_name = item.title.text
            news_link = item.link.text
            news_date = dt.strptime(site_date, '%a, %d %B %Y %H:%S:%M')
            news = [news_name, news_date, news_link]
            cursor.execute("SELECT news_name FROM site_news WHERE news_name=?", (news_name,))
            if len(cursor.fetchall()) == 0:
                cursor.execute("INSERT INTO site_news VALUES(?, ?, ?);", news)
                db.commit()
                bot.send_message(765860654, f'–í—ã—à–ª–∞ –Ω–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å {news_name}, –Ω–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', parse_mode='html')
                logger.info(f'–í—ã—à–ª–∞ –Ω–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è—é –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: {news_name} - {news_link}')
                cursor.execute("SELECT user_id FROM users")
                success_send = 0
                unsuccess_send = 0
                for user_id in cursor.fetchall():
                    try:
                        bot.send_message(*user_id, text=f'{news_name} \n\n{news_link}', parse_mode='html')
                        logger.info(f'–û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ–≤–æ—Å—Ç—å {user_id[0]}')
                        success_send += 1
                        time.sleep(0.25)
                    except:
                        logger.info(f'–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id[0]}')
                        unsuccess_send += 1
                        time.sleep(0.25)
                bot.send_message(765860654, f'–ù–æ–≤–æ—Å—Ç—å {news_name} —É–¥–∞—á–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ {success_send} —á–µ–ª–∞–º –∏ –Ω–µ—É–¥–∞—á–Ω–æ {unsuccess_send} —á–µ–ª–∞–º', parse_mode='html')
            else:
                logger.info('–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å:'+news_name)
    else:
        logger.info('–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞')


# –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–ª–¥–±–µ–∫
@bot.message_handler(state=Feedback.feedback)
def feedback(message):
    temp = f"<a href='tg://user?id={message.chat.id}'>–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}</a>"
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.delete_state(message.from_user.id, message.chat.id)
        bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –µ—â—ë —Ä–∞–∑')
    else:
        message_date = dt.now()
        feedback_list = [message.chat.id, message.from_user.username,
                         message.text, message_date.strftime('%d %B %Y %H:%M:%S'), temp]
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{feedback_list[1]} –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {feedback_list[2]}')
        db.execute("INSERT INTO feedback VALUES(?, ?, ?, ?, ?)", feedback_list)
        db.commit()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1)
        bot.delete_state(message.from_user.id, message.chat.id)
        bot.send_message(message.chat.id, text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –ú–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                         reply_markup=markup)
        for admin in admins:
            bot.send_message(admin, temp + '\n' + '–ï–≥–æ id - ' + str(message.chat.id), parse_mode='html')
            bot.send_message(admin, f'`{str(message.chat.id)}`', parse_mode='Markdown')


def izmenenia_yadisk():
    file_format = '.docx'
    y = yadisk.YaDisk(token='*') #–¢–æ–∫–µ–Ω –ø–∞–ø–∫–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –Ω–∞ —è–Ω–¥–µ–∫—Å –¥–∏—Å–∫–µ
    a = y.public_listdir('*') #–ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —è.–¥–∏—Å–∫–µ
    path_izmenenia = r'\\192.168.0.5\pool1\user\–ú–∏–ª–ª–µ—Ä –ö.–ú\tgbot'
    count = 0
    for file in a:
        if file_format in file.name:
            y.download_public(public_key=file.public_key, path=file.path,
                              file_or_path=path_izmenenia + f'\\' + file.name)
            count += 1
    if count > 0:
        logger.info('–û–±–Ω–æ–≤–∏–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ')
    else:
        logger.info('–í –ø–∞–ø–∫–µ –Ω–∞ —è.–¥–∏—Å–∫–µ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤')


def register_handlers_admin():
    bot.register_message_handler(admin_menu, commands=['admin'])
    bot.register_message_handler(sending_log, commands=['send_log'])
    bot.register_message_handler(sending_command, commands=['send_message'])
    bot.register_message_handler(send_feedback, commands=['send_feedback'])
    bot.register_message_handler(rss_command, commands=['send_rss'])
    bot.register_message_handler(reg_send_message_to_user, commands=['reg_send_message_to_user'])


# –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞
scheduler = BackgroundScheduler()
scheduler.add_job(rss_sending, "interval", minutes=10)
scheduler.add_job(izmenenia_yadisk, "interval", minutes=60)
scheduler.start()
